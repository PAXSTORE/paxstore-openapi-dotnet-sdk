<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="merchantCategoryBatchCreateRequestInvalid" xml:space="preserve">
    <value>Parameter merchantCategoryBatchCreateRequest cannot be null and empty!</value>
  </data>
  <data name="merchantCategoryCreateRequestIsNull" xml:space="preserve">
    <value>Parameter merchantCategoryCreateRequest cannot be null!</value>
  </data>
  <data name="merchantCategoryIdInvalid" xml:space="preserve">
    <value>Parameter merchantCategoryId cannot be null and cannot be less than 1!</value>
  </data>
  <data name="merchantCategoryNameEmpty" xml:space="preserve">
    <value>All the category names in the list cannot be blank!</value>
  </data>
  <data name="merchantCategoryUpdateRequestIsNull" xml:space="preserve">
    <value>Parameter merchantCategoryUpdateRequest cannot be null!</value>
  </data>
  <data name="merchantCreateRequestIsNull" xml:space="preserve">
    <value>Parameter resellerCreateRequest cannot be null!</value>
  </data>
  <data name="merchanteCategoryNameTooLong" xml:space="preserve">
    <value>Merchant category name '[NAME]' is too long!</value>
  </data>
  <data name="merchanteCategoryRemarksTooLong" xml:space="preserve">
    <value>Merchant category remarks '[REMARKS]' is too long!</value>
  </data>
  <data name="merchantUpdateRequestIsNull" xml:space="preserve">
    <value>Parameter merchantUpdateRequest cannot be null!</value>
  </data>
  <data name="msg_16000" xml:space="preserve">
    <value>Unknow SDK request error!</value>
  </data>
  <data name="msg_16104" xml:space="preserve">
    <value>Connection timeout!</value>
  </data>
  <data name="msg_16111" xml:space="preserve">
    <value>BaseUrl not correct!</value>
  </data>
  <data name="parameterMerchantIdInvalid" xml:space="preserve">
    <value>Parameter merchantId cannot be null and cannot be less than 1!</value>
  </data>
  <data name="resellerCreateRequestIsNull" xml:space="preserve">
    <value>Parameter resellerCreateRequest cannot be null!</value>
  </data>
  <data name="resellerIdInvalid" xml:space="preserve">
    <value>Parameter resellerId cannot be null and cannot be less than 1!</value>
  </data>
  <data name="resellerUpdateRequestIsNull" xml:space="preserve">
    <value>Parameter resellerUpdateRequest cannot be null!</value>
  </data>
  <data name="terminalCreateRequestIsNull" xml:space="preserve">
    <value>Parameter terminalCreateRequest cannot be null!</value>
  </data>
  <data name="terminalIdInvalid" xml:space="preserve">
    <value>Parameter terminalId cannot be null and cannot be less than 1!</value>
  </data>
  <data name="terminalUpdateRequestIsNull" xml:space="preserve">
    <value>Parameter terminalUpdateRequest cannot be null!</value>
  </data>
  <data name="parameterCreateTerminalApkRequestNull" xml:space="preserve">
    <value>Parameter createTerminalApkRequest cannot be null!</value>
  </data>
  <data name="parameterCreateTerminalApkRequestSnTidEmpty" xml:space="preserve">
    <value>The property SerialNo and TID in createTerminalApkRequest cannot be blank at same time!</value>
  </data>
  <data name="parameterCreateTerminalApkRequestTemplateNameTooLong" xml:space="preserve">
    <value>The max size of template names is 10!</value>
  </data>
  <data name="parameterTerminalTidEmpty" xml:space="preserve">
    <value>Parameter terminalTid cannot be blank!</value>
  </data>
  <data name="parameterPushFirmware2TerminalRequestNull" xml:space="preserve">
    <value>Parameter pushFirmware2TerminalRequest cannot be null!</value>
  </data>
  <data name="parameterpushFirmware2TerminalRequestSnTidEmpty" xml:space="preserve">
    <value>The property SerialNo and TID in pushFirmware2TerminalRequest cannot be blank at same time!</value>
  </data>
  <data name="parameterFirmwareNameCannotBeEmpty" xml:space="preserve">
    <value>Parameter firmwareName is mandatory!</value>
  </data>
  <data name="parameterPackageNameCannotBeEmpty" xml:space="preserve">
    <value>Parameter packageName is mandatory!</value>
  </data>
  <data name="parameterSnCannotBeEmpty" xml:space="preserve">
    <value>Parameter serialNo is mandatory!</value>
  </data>
  <data name="parameterTidCannotBeEmpty" xml:space="preserve">
    <value>Parameter tid is mandatory!</value>
  </data>
  <data name="terminalVariableIdInvalid" xml:space="preserve">
    <value>Parameter terminalVariableId invalid!</value>
  </data>
  <data name="parameterAttributeIdInvalid" xml:space="preserve">
    <value>Parameter attributeId cannot be less than 1!</value>
  </data>
  <data name="parameterSerialNoMandatory" xml:space="preserve">
    <value>Serial number is mandatory!</value>
  </data>
  <data name="parameterTerminalParameterVariableCreateRequestMandatory" xml:space="preserve">
    <value>Parameter terminalParameterVariableCreateReques is mandatory!</value>
  </data>
  <data name="paramCreateApkParameterRequestMandatory" xml:space="preserve">
    <value>Parameter createApkParameterRequest is mandatory!</value>
  </data>
  <data name="parameterBatchDeletionRequestMandatory" xml:space="preserve">
    <value>Parameter batchDeletionRequest is mandatory!</value>
  </data>
  <data name="parameterTerminalVariableIdInvalid" xml:space="preserve">
    <value>Parameter terminalVariableId cannot be null and cannot be less than 1!</value>
  </data>
  <data name="parameterTerminalVariableUpdateRequestMandatory" xml:space="preserve">
    <value>Parameter terminalVariableUpdateRequest is mandatory!</value>
  </data>
  <data name="tidAndSnIsMandatory" xml:space="preserve">
    <value>The parameter serialNo and tid  cannot be blank at same time!</value>
  </data>
  <data name="variableIdsMandatory" xml:space="preserve">
    <value>VariableIds cannot be empty!</value>
  </data>
  <data name="variableListMandatory" xml:space="preserve">
    <value>variableList can not be empty</value>
  </data>
</root>